{"version":3,"sources":["services/persons.js","components/Filter.js","components/AddPersonForm.js","components/Person.js","components/DisplayPersons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","exportedFunctions","getAll","axios","get","then","response","data","create","newPersonObject","post","update","updatedObject","put","id","remove","delete","Filter","value","filterOnChange","onChange","AddPersonForm","onSubmit","nameValue","numberValue","nameOnChange","numberOnChange","type","Person","person","handleDelete","name","number","onClick","DisplayPersons","persons","filterValue","filter","toLowerCase","includes","map","Notification","notification","result","message","style","padding","margin","border","color","backgroundColor","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterValue","setNotification","useEffect","personsService","initialPersons","e","target","preventDefault","createdPerson","concat","setTimeout","catch","error","personId","nameOfPerson","find","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa6fa8b6.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newPersonObject) => {\n  const request = axios.post(baseUrl, newPersonObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (updatedObject) => {\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst exportedFunctions = { getAll, create, update, remove };\nexport default exportedFunctions;\n","import React from 'react';\n\nconst Filter = ({ value, filterOnChange }) => (\n  <div>\n    filter shown with: <input value={value} onChange={filterOnChange} />\n  </div>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst AddPersonForm = ({\n  onSubmit,\n  nameValue,\n  numberValue,\n  nameOnChange,\n  numberOnChange,\n}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={nameValue} onChange={nameOnChange} />\n    </div>\n    <div>\n      number: <input value={numberValue} onChange={numberOnChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default AddPersonForm;\n","import React from 'react';\n\nconst Person = ({ person, handleDelete }) => (\n  <div>\n    {person.name} {person.number}\n    <button type=\"button\" value={person.id} onClick={handleDelete}>\n      delete\n    </button>\n  </div>\n);\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst DisplayPersons = ({ persons, filterValue, handleDelete }) => {\n  const filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n  return filteredPersons.map((person) => (\n    <Person key={person.id} person={person} handleDelete={handleDelete} />\n  ));\n};\n\nexport default DisplayPersons;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  const { result, message } = notification;\n  const successStyle = {\n    padding: 5,\n    margin: 5,\n    border: '1px solid black',\n    color: 'black',\n    backgroundColor: '#90EE90',\n  };\n  const errorStyle = {\n    padding: 5,\n    margin: 5,\n    border: '1px solid black',\n    color: 'black',\n    backgroundColor: '#ff3333',\n  };\n  return (\n    <div style={result === 'success' ? successStyle : errorStyle}>\n      <h1>{message}</h1>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport personsService from './services/persons';\nimport Filter from './components/Filter';\nimport AddPersonForm from './components/AddPersonForm';\nimport DisplayPersons from './components/DisplayPersons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleFilterChange = (e) => {\n    setFilterValue(e.target.value);\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    const newPersonObject = { name: newName, number: newNumber };\n    personsService\n      .create(newPersonObject)\n      .then((createdPerson) => {\n        setPersons(persons.concat(createdPerson));\n        setNotification({\n          result: 'success',\n          message: `Success! ${newName} was added to the phonebook`,\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        setNotification({\n          result: 'error',\n          message: error.response.data.error,\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      });\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const deletePerson = (e) => {\n    e.preventDefault();\n    const personId = e.target.value;\n    const nameOfPerson = persons.find((person) => person.id === personId).name;\n    const confirmRemoval = window.confirm(`Delete ${nameOfPerson} ?`);\n    if (confirmRemoval) {\n      personsService.remove(personId).then(() => {\n        setPersons(persons.filter((person) => person.id !== personId));\n        setNotification({\n          result: 'success',\n          message: `Success! ${nameOfPerson} was deleted`,\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter value={filterValue} filterOnChange={handleFilterChange} />\n      <h2>Add new person</h2>\n      <AddPersonForm\n        onSubmit={addPerson}\n        nameValue={newName}\n        numberValue={newNumber}\n        nameOnChange={handleNameChange}\n        numberOnChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <DisplayPersons\n        persons={persons}\n        filterValue={filterValue}\n        handleDelete={deletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}