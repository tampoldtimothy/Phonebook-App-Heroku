{"version":3,"sources":["services/persons.js","components/Filter.js","components/AddPersonForm.js","components/Person.js","components/DisplayPersons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","exportedFunctions","getAll","axios","get","then","response","data","create","newPersonObject","post","update","updatedObject","put","id","remove","delete","Filter","value","filterOnChange","onChange","AddPersonForm","onSubmit","nameValue","numberValue","nameOnChange","numberOnChange","type","Person","person","handleDelete","name","number","onClick","DisplayPersons","persons","filterValue","filter","toLowerCase","includes","map","Notification","message","style","padding","margin","border","color","backgroundColor","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterValue","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personsService","initialPersons","updatePerson","objectToUpdate","setTimeout","catch","error","e","target","preventDefault","checkForDuplicates","find","undefined","window","confirm","returnedPerson","concat","personId","parseInt","nameOfPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.624c39eb.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newPersonObject => {\n  const request = axios.post(baseUrl, newPersonObject)\n  return request.then(response => response.data)\n}\n\nconst update = updatedObject => {\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst exportedFunctions = { getAll, create, update, remove }\nexport default exportedFunctions\n","import React from 'react'\n\nconst Filter = ({ value, filterOnChange }) => (\n  <div>\n    filter shown with: <input value={value} onChange={filterOnChange} />\n  </div>\n)\n\nexport default Filter\n","import React from 'react'\n\nconst AddPersonForm = ({\n  onSubmit,\n  nameValue,\n  numberValue,\n  nameOnChange,\n  numberOnChange,\n}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={nameValue} onChange={nameOnChange} />\n    </div>\n    <div>\n      number: <input value={numberValue} onChange={numberOnChange} />\n    </div>\n    <div>\n      <button type='submit'>add</button>\n    </div>\n  </form>\n)\n\nexport default AddPersonForm\n","import React from 'react'\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <div>\n      {person.name} {person.number}\n      <button value={person.id} onClick={handleDelete}>\n        delete\n      </button>\n    </div>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst DisplayPersons = ({ persons, filterValue, handleDelete }) => {\n  const filteredPersons = persons.filter(person =>\n    person.name.toLowerCase().includes(filterValue.toLowerCase())\n  )\n  return filteredPersons.map(person => (\n    <Person key={person.id} person={person} handleDelete={handleDelete} />\n  ))\n}\n\nexport default DisplayPersons\n","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n  const successStyle = {\n    padding: 5,\n    margin: 5,\n    border: '1px solid black',\n    color: 'black',\n    backgroundColor: '#90EE90',\n  }\n  const errorStyle = {\n    padding: 5,\n    margin: 5,\n    border: '1px solid black',\n    color: 'black',\n    backgroundColor: '#ff3333',\n  }\n  return (\n    <div style={type === 'success' ? successStyle : errorStyle}>\n      <h1>{message}</h1>\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport Filter from './components/Filter'\nimport AddPersonForm from './components/AddPersonForm'\nimport DisplayPersons from './components/DisplayPersons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterValue, setFilterValue] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState('')\n\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const handleFilterChange = e => {\n    setFilterValue(e.target.value)\n  }\n\n  const handleNameChange = e => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value)\n  }\n\n  const addPerson = e => {\n    e.preventDefault()\n    const checkForDuplicates = persons.find(\n      person => person.name.toLowerCase() === newName.toLowerCase()\n    )\n    if (checkForDuplicates !== undefined) {\n      const confirmUpdate = window.confirm(\n        `${newName} is already added to the phonebook, replace the old number with a new one?`\n      )\n      if (confirmUpdate) {\n        updatePerson(checkForDuplicates)\n      }\n    } else {\n      const newPersonObject = { name: newName, number: newNumber }\n      personsService.create(newPersonObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNotificationType('success')\n        setNotificationMessage(`Success! ${newName} was added to the phonebook`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const updatePerson = objectToUpdate => {\n    const updatedObject = { ...objectToUpdate, number: newNumber }\n    personsService\n      .update(updatedObject)\n      .then(() => {\n        setPersons(\n          persons.map(person =>\n            person.id === updatedObject.id ? updatedObject : person\n          )\n        )\n        setNotificationType('success')\n        setNotificationMessage(`Success! ${newName} was updated`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setNotificationType('error')\n        setNotificationMessage(\n          `Error! ${newName} has already been removed from server`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n  }\n\n  const deletePerson = e => {\n    e.preventDefault()\n    const personId = parseInt(e.target.value)\n    const nameOfPerson = persons.find(person => person.id === personId).name\n    const confirmRemoval = window.confirm(`Delete ${nameOfPerson} ?`)\n    if (confirmRemoval) {\n      personsService.remove(personId).then(() => {\n        setPersons(persons.filter(person => person.id !== personId))\n        setNotificationType('success')\n        setNotificationMessage(`Success! ${nameOfPerson} was deleted`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} type={notificationType} />\n      <Filter value={filterValue} filterOnChange={handleFilterChange} />\n      <h2>Add new person</h2>\n      <AddPersonForm\n        onSubmit={addPerson}\n        nameValue={newName}\n        numberValue={newNumber}\n        nameOnChange={handleNameChange}\n        numberOnChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <DisplayPersons\n        persons={persons}\n        filterValue={filterValue}\n        handleDelete={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}